

import streamlit as st
import pandas as pd

# 餐厅数据
restaurants = pd.DataFrame({
    "餐厅名称": ["舒记老友粉", "天福香老友粉", "三品王牛肉粉", "姜胖胖自助烤肉", "牛扒大亨西餐厅","素宴·蔬食(素食自助餐厅科德店)","隆江猪脚饭(衡阳店)","尝回家猪脚饭·烧卤·白切(友爱店)","乐观面屋(东盟店)","重庆江湖拌面","苏氏小龙虾(东鸣路店)","三兄弟小龙虾馆","苏格里岛自助海鲜烤肉","吉布鲁牛排海鲜自助(南宁江南万达店)","鹿客臻鲜·海鲜烤肉自助餐厅(蓝鲸世界店)","今邕烧烤(园湖店)","舌战烧烤酒馆(三街两巷店)","亿口香龙虾","炙爱烧烤(万秀店)","夏朗蛋糕(城市花园店)","卡卡米苏·生日蛋糕(西乡塘店)","岁悦甜蜜蛋糕店","盛记顺德高佬猪杂粥店","南宁市雲菌瑶酒楼","啫啫村-生料啫啫煲(埌西店)"],
    "类型": ["中餐", "中餐", "快餐", "自助餐", "西餐","自助","堂食","堂食","粉","粉","小吃","小吃","自助","自助","自助","烧烤","烧烤","小吃","烧烤","糕点","糕点","糕点","粥","自助","堂食"],
    "评分": [4.4, 4.1, 4.5, 4.9, 4.3,4.6,4.7,4.4,4.5,4.2,4.7,4.6,4.6,4.5,4.3,4.8,4.6,4.3,4.2,4.6,4.7,4.4,4.5,4.2,4.7],
    "人均消费(元)": [15, 15, 20, 60, 80,30,30,39,21,20,98,103,78,80,90,123,90,120,89,68,55,134,15,200,34],
    "营业时间": ["6:00-22:00","9:00-22:00","5:00-23:00","10:00-23:00","12:00-24:00","17:00-20:30","10:30-20:00","9:00-19:00","9:00-20:00","9:00-20:00","9:30-20:00","12:00-23:00","12:00-23:00","12:300-23:00","12:00-23:00","17:00-23:00","17:00-02:00","17:00-02:00","12:300-23:00","12:300-23:00","17:30-22:00","7:30-22:00","7:30-22:00","7:30-22:00","7:30-22:00"],
    "latitude": [22.809728,22.822481,22.838432,22.789523,22.808867,22.848224,22.831269,22.839999,22.689112,22.810435,23.160266,22.756756,22.813919,22.790188,22.769671,22.826847,22.813768,22.845349,22.789165,22.808243,22.846720,22.688017,22.819031,22.798990,22.805077],
    "longitude": [108.324614,108.387910,108.262110,108.313493,108.326838,108.257296,108.310691,108.309224,108.267817,108.403375,108.284216,108.332567,108.321484,108.312827,108.306724,108.339396,108.320656,108.315969,108.318908,108.370764,108.300288,109.460925,108.343062,108.378891,108.368414]
})






st.markdown('### 门店详细数据（仅展示评分大于4.5的店铺）')

#仅展示评分大于4.5的店
high_rating = restaurants[restaurants["评分"] >= 4.5]
# 显示表格（可排序、搜索）
st.dataframe(high_rating[["餐厅名称", "类型", "评分", "人均消费(元)","营业时间"]])




st.markdown("### 人均消费数据")

st.bar_chart(restaurants.set_index("餐厅名称")["人均消费(元)"])


st.markdown('### 门店评分数据（仅展示评分大于4.5的店铺）')






# 设置餐厅名称为索引（X轴）
data_for_chart = restaurants.set_index("餐厅名称")["评分"]

# 绘制面积图
st.area_chart(data_for_chart)


st.markdown('### 价格走势折线图')

data = {
    '月份': ['一月', '二月', '三月', '四月', '五月', '六月', 
           '七月', '八月', '九月', '十月', '十一月', '十二月'],
    '书记老友粉': [15, 18, 14, 17, 19, 31, 22, 13, 17, 13, 11, 21],
    '天福香老友粉': [18, 16, 21, 24, 45, 21, 12, 24, 26, 16, 18, 25],
    '三品王牛肉粉': [23, 21, 34, 23, 25, 35, 53, 27, 21, 24, 32, 14],
     '姜胖胖自助烤肉': [115, 145, 95, 122, 165, 116, 131, 151, 125, 99, 123, 156],
    '乐观面屋(东盟店)': [27, 25, 34, 35, 21, 41, 12, 35, 23, 34, 28, 45]
}

df=pd.DataFrame(data)
df=pd.DataFrame(data)
index=pd.Series([1,2,3,4,5,6,7,8,9,10,11,12],name='序号')
df.index=index
st.line_chart(df, x='月份')




import pydeck as pdk

# 方法1：修复 st.map() 的悬停
st.header("基础地图（自动悬停）")
st.map(restaurants[["latitude", "longitude", "餐厅名称"]])  # 只传需要的列



import streamlit.components.v1 as components



# 配置
TENCENT_API_KEY = "7QTBZ-NDMLM-GAQ6N-6YN54-XVWL2-5WFQS"
restaurants = pd.DataFrame({
    "name": ["舒记老友粉", "天福香老友粉", "三品王牛肉粉"],
    "lat": [22.809728, 22.822481, 22.838432],
    "lng": [108.324614, 108.387910, 108.262110],
    "price": [15, 15, 20]
})

# 生成地图
map_html = f"""
<!DOCTYPE html>
<html>
<head>
    <script src="https://map.qq.com/api/gljs?v=1.exp&key={TENCENT_API_KEY}"></script>
    <style>#map {{ width:100%; height:500px; }}</style>
</head>
<body>
    <div id="map"></div>
    <script>
        var map = new TMap.Map("map", {{
            center: new TMap.LatLng(22.82, 108.35),
            zoom: 12,
            mapStyleId: "卫星图"
        }});

        // 动态加载Python数据
        var restaurants = {restaurants.to_json(orient="records")};
        
        restaurants.forEach(restaurant => {{
            var marker = new TMap.Marker({{
                position: new TMap.LatLng(restaurant.lat, restaurant.lng),
                map: map,
                content: '<div style="background:#FF6D00;color:white;padding:4px 8px;">' + restaurant.name + '</div>'
            }});

            marker.on("click", () => {{
                new TMap.InfoWindow({{
                    map: map,
                    position: new TMap.LatLng(restaurant.lat, restaurant.lng),
                    content: `
                        <h3>${{restaurant.name}}</h3>
                        <p>人均: ￥${{restaurant.price}}元</p>
                    `
                }}).open();
            }});
        }});
    </script>
</body>
</html>
"""

# 显示
st.title("🍜 南宁餐厅地图（腾讯卫星图）")
components.html(map_html, height=550)
